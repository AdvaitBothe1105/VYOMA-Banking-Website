// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")

}

model User {
  id            String   @id @default(uuid())
  crn           String   @unique
  name          String
  email         String   
  password      String
  phone         String
  dob           DateTime
  address       String
  city          String
  state         String
  pincode       String
  aadharUrl     String
  panUrl        String
  accountType   String
  agree         Boolean
  createdAt     DateTime @default(now())

  accounts      Account[]
}

model Account {
  account_id     Int     @id @default(autoincrement())
  crn            String @unique
  accountType   String
  account_number String @unique
  ifsc_code      String @default("VYOMAIN0000001")
  balance Decimal @default(3000.00)
  name      String
  created_at     DateTime @default(now())

  user User @relation(fields: [crn], references: [crn], onDelete: Cascade)
  transactionsFrom Transaction[] @relation("FromAccount")
  transactionsTo   Transaction[] @relation("ToAccount")
}

model Transaction {
  id              Int      @id @default(autoincrement())
  fromAccountId   Int
  toAccountId     Int
  amount          Decimal
  remarks         String?
  createdAt       DateTime @default(now())

  fromAccount     Account  @relation("FromAccount", fields: [fromAccountId], references: [account_id])
  toAccount       Account  @relation("ToAccount", fields: [toAccountId], references: [account_id])
}